// ---------- 1. 그냥 함수 실행 ----------
function a() {
  //console.log(this); // global
}
a();
/*함수를 호출하는 순간에 얘를 호출하는 주체에 따라서 this는 바뀐다 여기서는 전역공간에서 호출 했으니 호출한 대상은 전역 객체가 되는것이다*/

// ---------- 2. 함수 안에 함수 실행 ----------
function b() {
  function c() {
    // console.log(this); // global
  }
  c();
}
b();
/*1번에 코멘트에 따라서 this === b를 가르켜야 하는데 global을 가르킨다 이건 버그 또는 js 특성 이라고 많이 한다 이것에 해결방법은 arrow function (3번)을 사용하는 것이다 */

// ---------- 3. 화살표 함수 안에 화살표 함수 ----------
const d = () => {
  const f = () => {
    console.log(this); // d
  };
  f();
};
d();
/*d 함수와 f 함수 둘 다 화살표 함수로 바꿔주었다 결과는 {}(빈객체) 나왔다 this가 global을 가르키지 않고 d를 가르키게 성공함 하지만 값이 없으니 {}(빈객체)로 나오는 것이다*/

// ---------- 4. 메서드 안에 함수 ----------

const g = {
  h: function () {
    function i() {
      // console.log(this); // global
    }
    i();
  },
};
g.h();
/*여기서 i를 보면 함수로써 호출을 했다 그렇게 되면 무조건 전역객체를 가르킨다 함수의 특성상 this가 누굴 가르키는지 쉽게 알기 위해서는 호출한 형ㅌ애만 보면 된다*/
